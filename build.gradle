buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group 'com.gj'
version '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation ('org.springframework.boot:spring-boot-starter-security')
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation ('org.springframework.boot:spring-boot-starter-logging')
    implementation ('org.springframework.boot:spring-boot-starter-validation')
    implementation ('org.springframework.boot:spring-boot-starter-actuator')

    compileOnly ('org.projectlombok:lombok:1.18.10')
    annotationProcessor ('org.projectlombok:lombok:1.18.10')

    runtimeOnly ('org.hsqldb:hsqldb:2.5.1')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
//    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation ('io.rest-assured:rest-assured:4.3.1')
    testImplementation ('org.mockito:mockito-junit-jupiter:3.5.13')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/jacoco")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [ 'com/auspos/suburb/config/**' ])
        }))
    }
}



